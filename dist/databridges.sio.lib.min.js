var dbridges=function(e){"use strict";function t(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}const n={E001:[1,1],E002:[1,2],E004:[1,4],E006:[1,5],E008:[1,5],E009:[1,7],E010:[1,7],E011:[4,8],E012:[5,9],E013:[5,10],E014:[6,8],E015:[6,11],E024:[11,8],E025:[11,11],E026:[11,11],E027:[11,14],E028:[11,11],E030:[12,16],E033:[20,8],E038:[20,24],E039:[20,11],E040:[3,3],E041:[10,13],E042:[20,19],E048:[21,18],E051:[21,18],E052:[21,18],E053:[21,8],E054:[15,3],E055:[22,3],E058:[6,20],E059:[6,20],E060:[1,21],E061:[24,22],E062:[24,23],E063:[1,8],E064:[7,3],E065:[14,3],E066:[16,9],E067:[16,10],E068:[27,8],E070:[13,3],E076:[18,9],E077:[18,10],E079:[15,8],E080:[15,25],E082:[9,3],E084:[28,3],E088:[29,3],E090:[30,8],E091:[11,28],E092:[30,28],E093:[11,29],E094:[30,30],E095:[30,31],E096:[12,40],E097:[12,32],E098:[12,8],E099:[31,31],E100:[31,40],E101:[31,34],E102:[31,8],E103:[30,41],E104:[21,36],E105:[27,37],E108:[23,38],E109:[20,38],E110:[32,39],E111:[32,10]},_={1:"DBLIB_CONNECT",2:"DBCFCALLEE_CF_CALL",3:"DBNET_CHANNEL_CALL",4:"DBLIB_RTTPING",5:"DBLIB_CONNECT_BIND",6:"DBLIB_CHANNEL_PUBLISH",7:"DBNET_CHANNEL_SUBSCRIBE",8:"DBNET_RPC_REGISTER",9:"DBNET_RPC_CONNECT",10:"DBRPCCALLEE_CHANNEL_CALL",11:"DBLIB_CHANNEL_SUBSCRIBE",12:"DBLIB_CHANNEL_UNSUBSCRIBE",13:"DBNET_CF_CALL",14:"DBNET_CHANNEL_UNSUBSCRIBE",15:"DBNET_RPC_CALL",16:"DBLIB_CF_BIND",17:"DBLIB_RPC_BIND",18:"DBLIB_RPC_CALLER",19:"DBLIB_CHANNEL_SENDMSG",20:"DBLIB_CHANNEL_CALL",21:"DBLIB_RPC_CONNECT",22:"DBRPCCALLEE_RPC_CALL",23:"DBLIB_RPC_CALL",24:"DBNET_CONNECT",25:"DBLIB_RPC_INIT",26:"DBLIB_RPC_REGISTER",27:"DBLIB_CF_CALL",28:"DBNET_CHANNEL_CONNECT",29:"DBNET_CHANNEL_DISCONNECT",30:"DBLIB_CHANNEL_CONNECT",31:"DBLIB_CHANNEL_DISCONNECT",32:"DBLIB_CF_REGFN",33:"DBLIB_RPC_REGFN"},r={1:"INVALID_URL",2:"INVALID_AUTH_PARAM",3:"ERR_",4:"INVALID_ACCESSTOKEN_FUNCTION",5:"HTTP_",6:"AUTH_FAILED",7:"INVALID_CLIENTFUNCTION",8:"NETWORK_DISCONNECTED",9:"INVALID_EVENTNAME",10:"INVALID_CALLBACK",11:"INVALID_CHANNELNAME",12:"ACCESSTOKEN_FAILED",13:"CALLEE_EXCEPTION",14:"INVALID_CHANNELNAME_LENGTH",15:"CHANNEL_ALREADY_SUBSCRIBED",16:"CHANNEL_NOT_SUBSCRIBED",17:"CHANNEL_ALREADY_UNSUBSCRIBED",18:"INVALID_SERVERNAME",19:"RPC_TIMEOUT",20:"INVALID_SUBJECT",21:"RECONNECT_ATTEMPT_EXCEEDED",22:"DISCONNECT_REQUEST",23:"RECONNECT_REQUEST",24:"INVALID_FUNCTION",25:"RESPONSE_TIMEOUT",26:"RPC_INVALID_FUNCTIONS",27:"ACCESS_TOKEN_FAIL",28:"ACCESS_TOKEN",29:"CHANNEL_EXISTS",30:"CHANNEL_ALREADY_CONNECTED",31:"INVALID_CHANNEL",32:"UNSUBSCRIBE_ALREADY_INITIATED",33:"INVALID_TYPE",34:"DISCONNECT_ALREADY_INITIATED",35:"INVALID_BINDING",36:"ACCESS_DENIED",37:"RESPONSE_OBJECT_CLOSED",38:"ID_GENERATION_FAILED",39:"INVALID_FUNCTION_NAME",40:"INVALID_CHANNEL_TYPE",41:"INVALID_CHANNEL_TYPE_BINDING"};class m extends Error{constructor(e,t=void 0){let s=!1;var i;e in n?(super(e),2==(i=n[e]).length?(i[0]in _?(this.source=_[i[0]],s=!0):(this.source="DBLIB_EXCEPTION_"+i[0],this.code=i[0]+"_undefined"),i[1]in r?this.code=r[i[1]]:s?this.code=i[1]+"_undefined":this.code=i[0]+"_"+i[1]+"_undefined"):this.source="DBLIB_EXCEPTION",this.message=t?t.join(", "):""):(super(e),this.source="DBLIB_EXCEPTION",this.code=e+"_undefined"),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this._EKEY=e}updatecode(e,t=void 0){e&&("_"!=this.code.charAt(this.code.length-1)?this.code=this.code+"_"+e:this.code=this.code+e),t&&(this.message=t)}getEKEY(){return this._EKEY}}class c{constructor(){this._local_register=new Map,this._global_register=[]}isExists(e){return this._local_register.has(e)}bind(e,t){if(!e)throw new m("E012");if(!t)throw new m("E013");if("string"!=typeof e)throw new m("E012");if("function"!=typeof t)throw new m("E013");this._local_register.has(e)?this._local_register.get(e).push(t):this._local_register.set(e,[t])}bind_all(e){if(!e)throw new m("E013");if("function"!=typeof e)throw new m("E013");this._global_register.push(e)}unbind(t,s){t||s?!t||s?t&&s&&this._local_register.get(t).forEach(e=>{e===s&&delete this._local_register.get(t)[e]}):this._local_register.delete(t):this._local_register=new Map}unbind_all(e){e?delete this._global_register[e]:this._global_register=[]}emit2(e,t,s,i,n){if(this._local_register.has(e)){var _=this._local_register.get(e);if(0<_.length)for(let e=0;e<_.length;e++)_[e](t,s,i,n)}}emit_cf(e,t,s,i=null){!this._local_register.has(e)||0<(e=this._local_register.get(e)).length&&e[0](t,s,i)}emit_connectionState(e,t=void 0,s=void 0){const i=e=>{t||s||this._global_register[e](),!t&&s&&this._global_register[e](void 0,s),t&&s&&this._global_register[e](t,s),t&&!s&&this._global_register[e](t),(e+=1)<this._global_register.length&&i(e)};if(0<this._global_register.length&&i(0),this._local_register.has(e)){var n=this._local_register.get(e);const _=e=>{t||s||n[e](),!t&&s&&n[e](void 0,s),t&&s&&n[e](t,s),t&&!s&&n[e](t),(e+=1)<n.length&&_(e)};0<n.length&&_(0)}}emit_channel(e,t=void 0,s=void 0){const i=e=>{t||s||this._global_register[e](),!t&&s&&this._global_register[e](void 0,s),t&&s&&this._global_register[e](t,s),t&&!s&&this._global_register[e](t),(e+=1)<this._global_register.length&&i(e)};if(0<this._global_register.length&&i(0),this._local_register.has(e)){var n=this._local_register.get(e);const _=e=>{t||s||n[e](),!t&&s&&n[e](void 0,s),t&&s&&n[e](t,s),t&&!s&&n[e](t),(e+=1)<n.length&&_(e)};0<n.length&&_(0)}}emit_clientfunction(e,t,s=null,i=null){if(this._local_register.has(e)){var n=this._local_register.get(e);if(0<n.length)for(let e=0;e<n.length;e++)n[e](t,s,i)}}emit(t,s,i,n){const _=e=>{s&&i&&n?this._global_register[e](t,i,s,n):s&&i&&!n?this._global_register[e](t,i,s):s&&!i&&n?this._global_register[e](t,s,n):!s||i||n?s||i||n?s||!i||n||this._global_register[e](t,i):this._global_register[e](t):this._global_register[e](t,s),(e+=1)<this._global_register.length&&_(e)};if(0<this._global_register.length&&_(0),this._local_register.has(t)){var r=this._local_register.get(t);const c=e=>{s&&i&&n?r[e](i,t,s,n):s&&i&&!n?r[e](i,t,s):s&&!i&&n?r[e](t,s,n):!s||i||n?s||i||n?s||!i||n||r[e](i):r[e]():r[e](s),(e+=1)<r.length&&c(e)};0<r.length&&c(0)}}}const f=Object.freeze({CONNECTED:"connected",ERROR:"connect_error",DISCONNECTED:"disconnected",RECONNECTING:"reconnecting",CONNECTING:"connecting",STATE_CHANGE:"state_change",RECONNECT_ERROR:"reconnect_error",RECONNECT_FAILED:"reconnect_failed",RECONNECTED:"reconnected",CONNECTION_BREAK:"connection_break",RTTPONG:"rttpong",RTTPING:"rttping"});function h(e){const t=new TextEncoder;return t.encode(e)}function o(e,t,s,i,n,_,r,c,a=void 0){r=r||null,c=c||null,a=a||null;a={eventname:"db",dbmsgtype:t,subject:_=_||null,rsub:null,sid:i,payload:h((n=n||null)||""),fenceid:s,rspend:null,rtrack:null,rtrackstat:null,t1:c,latency:null,globmatch:0,sourceid:r,sourceip:null,replylatency:null,oqueumonitorid:a};return e.send(a)}function l(e,t,s,i,n,_,r,c,a){c=c||!1,a=a||null,s=s||null;a={eventname:"db",dbmsgtype:t,subject:i=i||null,rsub:n=n||null,sid:_=_||null,payload:h((r=r||null)||""),fenceid:s,rspend:c,rtrack:a,rtrackstat:null,t1:null,latency:null,globmatch:0,sourceid:null,sourceip:null,replylatency:null,oqueumonitorid:null};return e.send(a)}function E(){return(""+Math.random()).substring(2,8)}const a=Object.freeze({SUBSCRIBE_SUCCESS:"dbridges:subscribe.success",SUBSCRIBE_FAIL:"dbridges:subscribe.fail",ONLINE:"dbridges:channel.online",OFFLINE:"dbridges:channel.offline",REMOVE:"dbridges:channel.removed",UNSUBSCRIBE_SUCCESS:"dbridges:unsubscribe.success",UNSUBSCRIBE_FAIL:"dbridges:unsubscribe.fail",CONNECT_SUCCESS:"dbridges:connect.success",CONNECT_FAIL:"dbridges:connect.fail",DISCONNECT_SUCCESS:"dbridges:disconnect.success",DISCONNECT_FAIL:"dbridges:disconnect.fail",RESUBSCRIBE_SUCCESS:"dbridges:resubscribe.success",RESUBSCRIBE_FAIL:"dbridges:resubscribe.fail",RECONNECT_SUCCESS:"dbridges:reconnect.success",RECONNECT_FAIL:"dbridges:reconnect.fail",PARTICIPANT_JOINED:"dbridges:participant.joined",PARTICIPANT_LFET:"dbridges:participant.left",REGISTRATION_SUCCESS:"dbridges:rpc.server.registration.success",REGISTRATION_FAIL:"dbridges:rpc.server.registration.fail",SERVER_ONLINE:"dbridges:rpc.server.online",SERVER_OFFLINE:"dbridges:rpc.server.offline",UNREGISTRATION_SUCCESS:"dbridges:rpc.server.unregistration.success",UNREGISTRATION_FAIL:"dbridges:rpc.server.unregistration.fail",RPC_CONNECT_SUCCESS:"dbridges:rpc.server.connect.success",RPC_CONNECT_FAIL:"dbridges:rpc.server.connect.fail"}),d=Object.freeze({CHANNELSUBSCRIBE:"channel.subscribe",CHANNELCONNECT:"channel.connect",RPCCONNECT:"rpc.connect",RPCREGISTER:"rpc.register",SYSTEM_CHANNELSUBSCRIBE:"system_channel.subscribe"}),w=Object.freeze({SUBSCRIBE_TO_CHANNEL:11,CONNECT_TO_CHANNEL:12,UNSUBSCRIBE_DISCONNECT_FROM_CHANNEL:13,PUBLISH_TO_CHANNEL:16,SERVER_SUBSCRIBE_TO_CHANNEL:111,SERVER_UNSUBSCRIBE_DISCONNECT_FROM_CHANNEL:113,SERVER_PUBLISH_TO_CHANNEL:116,SERVER_CHANNEL_SENDMSG:117,LATENCY:99,SYSTEM_MSG:0,PARTICIPANT_JOIN:17,PARTICIPANT_LEFT:18,CF_CALL_RECEIVED:44,CF_CALL:44,CF_CALL_RESPONSE:46,CF_CALL_TIMEOUT:49,CF_RESPONSE_TRACKER:48,CF_CALLEE_QUEUE_EXCEEDED:50,REGISTER_RPC_SERVER:51,UNREGISTER_RPC_SERVER:52,CONNECT_TO_RPC_SERVER:53,CALL_RPC_FUNCTION:54,CALL_CHANNEL_RPC_FUNCTION:55,RPC_CALL_RECEIVED:54,RPC_CALL_RESPONSE:56,RPC_CALL_TIMEOUT:59,RPC_RESPONSE_TRACKER:58,RPC_CALLEE_QUEUE_EXCEEDED:60});class s{constructor(e){this._state="",this._isconnected=!1,this._NoChangeEvents=void 0,this._supportedEvents=["connect_error","connected","disconnected","reconnecting","connecting","state_change","reconnect_error","reconnect_failed","reconnected","connection_break","rttpong"],this._registry=new c,this._newLifeCycle=!0,this.reconnect_attempt=0,this._dbcore=e,this._rttms=void 0}get rttms(){return this._rttms}get state(){return this._state}set state(e){this._state=e}get isconnected(){return this._isconnected}rttping(e=null){const t=new Date;var s=t.getTime();if(!o(this._dbcore,w.SYSTEM_MSG,null,null,e,"rttping",null,s))throw new m("E011")}set_newLifeCycle(e){this._newLifeCycle=e}get_newLifeCycle(){return this._newLifeCycle}bind(e,t){if(!e)throw new m("E012");if(!t)throw new m("E013");if("string"!=typeof e)throw new m("E012");if(!this._supportedEvents.includes(e))throw new m("E012");if("function"!=typeof t)throw new m("E013");this._registry.bind(e,t)}unbind(e,t){this._registry.unbind(e,t)}_updatestates(e){switch(e){case f.CONNECTED:case f.RECONNECTED:case f.RTTPONG:case f.RTTPING:this._isconnected=!0;break;default:this._isconnected=!1}}_handledispatcher(e,t){var s=this._state;["reconnect_attempt","rttpong","rttping"].includes(e)||(this._state=e),this._state=e,this._updatestates(e),e!=s&&(["reconnect_attempt","rttpong","rttping"].includes(e)||["reconnect_attempt","rttpong","rttping"].includes(s)||(s={previous:s,current:e},"disconnected"==(this._state=e)&&(this._state=""),this._registry.emit_connectionState(f.STATE_CHANGE,s))),t?this._registry.emit_connectionState(e,t):this._registry.emit_connectionState(e),"reconnected"==e&&(this._state="connected")}}class C extends c{constructor(e,t,s){super(),this._channelName=e,this._sid=t,this._dbcore=s,this._isOnline=!1}getChannelName(){return this._channelName}isOnline(){return this._isOnline}_set_isOnline(e){this._isOnline=e}publish(e,t,s=void 0){if(!this._isOnline)throw new m("E014");if("sys:*"==this._channelName.toLowerCase())throw new m("E015");if(!e)throw new m("E058");if("string"!=typeof e)throw new m("E059");if(!o(this._dbcore,w.PUBLISH_TO_CHANNEL,this._channelName,null,t,e,null,null,s))throw new m("E014")}call(i,n,_,r){return new Promise((t,s)=>{if(["channelMemberList","channelMemberInfo","timeout","err"].includes(i))if(this._channelName.toLowerCase().startsWith("prs:")||this._channelName.toLowerCase().startsWith("sys:")){let e=this._dbcore.rpc.ChannelCall(this._channelName);e.call(i,n,_,e=>{r(e)}).then(e=>{t(e)}).catch(e=>{s(e)})}else s(new m("E039"));else s(new m("E038"))})}}const i=[a.CONNECT_SUCCESS,a.CONNECT_FAIL,a.RECONNECT_SUCCESS,a.RECONNECT_FAIL,a.DISCONNECT_SUCCESS,a.DISCONNECT_FAIL,a.ONLINE,a.OFFLINE,a.REMOVE,a.PARTICIPANT_JOINED,a.PARTICIPANT_LEFT];class N{constructor(e,t,s){this._channelName=e,this._dbcore=s,this._sid=t,this._dispatch=new c,this._isOnline=!1}getChannelName(){return this._channelName}isOnline(){return this._isOnline}_set_isOnline(e){this._isOnline=e}publish(e,t,s=void 0){if(!this._isOnline)throw new m("E014");if(!e)throw new m("E058");if("string"!=typeof e)throw new m("E059");if("sys:*"==this._channelName.toLowerCase())throw new m("E015");if(!o(this._dbcore,w.PUBLISH_TO_CHANNEL,this._channelName,null,t,e,null,null,s))throw new m("E014")}bind(e,t){if(!i.includes(e))throw new m("E103");this._dispatch.bind(e,t)}unbind(e,t){i.includes(e)&&this._dispatch.isExists(e)&&this._dispatch.unbind(e,t)}emit_channel(e,t,s,i){this._dispatch.emit_channel(e,t,s,i)}call(i,n,_,r){return new Promise((t,s)=>{if(["channelMemberList","channelMemberInfo","timeout","err"].includes(i))if(this._channelName.toLowerCase().startsWith("prs:")||this._channelName.toLowerCase().startsWith("sys:")){let e=this._dbcore.rpc.ChannelCall(this._channelName);e.call(i,n,_,e=>{r(e)}).then(e=>{t(e)}).catch(e=>{s(e)})}else s(new m("E039"));else s(new m("E038"))})}}const A=Object.freeze({SUBSCRIPTION_INITIATED:"subscription_initiated",SUBSCRIPTION_PENDING:"subscription_pending",SUBSCRIPTION_ACCEPTED:"subscription_accepted",SUBSCRIPTION_ERROR:"subscription_error",CONNECTION_INITIATED:"connection_initiated",CONNECTION_PENDING:"connection_pending",CONNECTION_ACCEPTED:"connection_accepted",CONNECTION_ERROR:"connection_error",UNSUBSCRIBE_INITIATED:"unsubscribe_initiated",UNSUBSCRIBE_ACCEPTED:"unsubscribe_accepted",UNSUBSCRIBE_ERROR:"unsubscribe_error",DISCONNECT_INITIATED:"disconnect_initiated",DISCONNECT_ACCEPTED:"disconnect_accepted",DISCONNECT_ERROR:"disconnect_error"});class u{constructor(e,t,s,i){this._dbchannel=i,this._mtype=e,this._channelName=t,this._sid=s,this._dbchannel=i}end(e){this._dbchannel._send_to_dbr(this._mtype,this._channelName,this._sid,e)}exception(e){this._dbchannel._send_to_dbr(this._mtype,this._channelName,this._sid,{statuscode:9,error_message:e,accesskey:null})}}class S{constructor(e){t(this,"bind",(e,t)=>{this._dispatch.bind(e,t)}),t(this,"unbind",(e,t)=>{this._dispatch.unbind(e,t)}),t(this,"bind_all",e=>{this._dispatch.bind_all(e)}),t(this,"unbind_all",e=>{this._dispatch.unbind_all(e)}),this._channel_type=["pvt","prs","sys"],this._channelsid_registry=new Map,this._channelname_sid=new Map,this._dbcore=e,this._dispatch=new c,this._metadata={channelname:void 0,eventname:void 0,sourcesysid:void 0,sqnum:void 0,sessionid:void 0,intime:void 0}}_handledispatcher(e,t=void 0,s=void 0){this._dispatch.emit_channel(e,t,s)}_handledispatcherEvents(e,t=void 0,s=void 0,i=void 0){this._dispatch.emit_channel(e,t,i);s=this._channelname_sid.get(s);let n=this._channelsid_registry.get(s);n&&n.ino.emit_channel(e,t,i)}isPrivateChannel(e){let t=!1;return e.includes(":")&&(e=e.toLowerCase().split(":"),t=!!this._channel_type.includes(e[0])),t}_ReSubscribeAll(){const _=async(e,t,s,i)=>{let n=!1;if(n=o(this._dbcore,0==e?w.SUBSCRIBE_TO_CHANNEL:w.CONNECT_TO_CHANNEL,t,s,i),!n)throw 0==e?new m("E024"):new m("E090")},s=async t=>{let s=this._channelsid_registry.get(t);var e,i=this.isPrivateChannel(s.name);switch(s.status){case A.SUBSCRIPTION_ACCEPTED:case A.SUBSCRIPTION_INITIATED:try{if(i){var n=new u(0,s.name,t,this);let e=void 0;e=s.name.toLowerCase().startsWith("sys:")?d.SYSTEM_CHANNELSUBSCRIBE:d.CHANNELSUBSCRIBE,this._dbcore._accesstoken_dispatcher(s.name,e,n)}else _(0,s.name,t,void 0)}catch(e){return void this._handleSubscribeEvents([a.OFFLINE],e,s)}break;case A.CONNECTION_INITIATED:case A.CONNECTION_ACCEPTED:try{i?(e=new u(1,s.name,t,this),this._dbcore._accesstoken_dispatcher(s.name,d.CHANNELCONNECT,e)):_(1,s.name,t,void 0)}catch(e){return void this._handleSubscribeEvents([a.OFFLINE],e,s)}break;case A.UNSUBSCRIBE_INITIATED:s.ino._set_isOnline(!1),this._handleSubscribeEvents([a.UNSUBSCRIBE_SUCCESS,a.REMOVE],"",s),this._channelname_sid.delete(s.name),this._channelsid_registry.delete(t);break;case A.DISCONNECT_INITIATED:s.ino._set_isOnline(!1),this._handleSubscribeEvents([a.DISCONNECT_SUCCESS,a.REMOVE],"",s),this._channelname_sid.delete(s.name),this._channelsid_registry.delete(t)}};this._channelname_sid.forEach((e,t)=>{s(e)})}isEmptyOrSpaces(e){return null===e||/^ *$/.test(e)}_validateChanelName(e,t=0){if(!this._dbcore.connectionstate.isconnected)switch(t){case 0:throw new m("E024");case 1:throw new m("E090")}if("string"!=typeof e)switch(t){case 0:throw new m("E026");case 1:throw new m("E095")}if(this.isEmptyOrSpaces(e))switch(t){case 0:throw new m("E025");case 1:throw new m("E095")}if(64<e.length)switch(t){case 0:throw new m("E027");case 1:throw new m("E095")}if(!/^[a-zA-Z0-9.:_-]*$/.test(e))switch(t){case 0:throw new m("E028");case 1:throw new m("E095")}if(e.includes(":")){e=e.toLowerCase().split(":");if(!this._channel_type.includes(e[0]))switch(t){case 0:throw new m("E028");case 1:throw new m("E095")}}}_communicate(e,t,s,i){let n=!1,_=void 0,r=void 0;var c=null,a=E();if(s){s=new u(e,t,a,this);this._dbcore._accesstoken_dispatcher(t,i,s)}else if(n=o(this._dbcore,0==e?w.SUBSCRIBE_TO_CHANNEL:w.CONNECT_TO_CHANNEL,t,a,c),!n)throw 0==e?new m("E024"):new m("E090");return r=0==e?(_=new C(t,a,this._dbcore),{name:t,type:"s",status:A.SUBSCRIPTION_INITIATED,ino:_}):(_=new N(t,a,this._dbcore),{name:t,type:"c",status:A.CONNECTION_INITIATED,ino:_}),this._channelsid_registry.set(a,r),this._channelname_sid.set(t,a),_}_verify_acccess_response(e){let t="";return"statuscode"in e?"number"!=typeof e.statuscode?{result:!(t="the return object structure is blank, statuscode vaule must be numeric"),msg:t,token:""}:0!=e.statuscode?(t="error_message"in e?e.error_message:"access_token function return statuscode: "+e.statuscode+" error_message tag missing",{result:!1,msg:t,token:""}):"accesskey"in e?e.accesskey?{result:!0,msg:"",token:e.accesskey}:(t="access_token function return statuscode: "+e.statuscode+" accesskey is blank",{result:!1,msg:t,token:""}):(t="access_token function return statuscode: "+e.statuscode+" accesskey tag missing",{result:!1,msg:t,token:""}):{result:!(t="the return object structure is blank, does not contain statuscode key"),msg:t,token:""}}_failure_dispatcher(e,t,s){const i=this._channelsid_registry.get(t);i.ino._set_isOnline(!1);let n=void 0;0==e?(n=new m("E091"),n.updatecode("",s),this._handleSubscribeEvents([a.SUBSCRIBE_FAIL],n,i)):(n=new m("E092"),n.updatecode("",s),this._handleSubscribeEvents([a.CONNECT_FAIL],n,i)),this._channelname_sid.delete(i.name),this._channelsid_registry.delete(t)}_send_to_dbr(e,t,s,i){let n=void 0;var _=this._verify_acccess_response(i);_.result?(i=_.token,n=o(this._dbcore,0==e?w.SUBSCRIBE_TO_CHANNEL:w.CONNECT_TO_CHANNEL,t,s,i),n||this._failure_dispatcher(e,s,"library is not connected with the dbridges network")):this._failure_dispatcher(e,s,_.msg)}subscribe(e){if("sys:*"!=e.toLowerCase())try{this._validateChanelName(e)}catch(e){throw e}if(this._channelname_sid.has(e))throw new m("E093");var t=this.isPrivateChannel(e);let s=void 0,i=void 0;i=e.toLowerCase().startsWith("sys:")?d.SYSTEM_CHANNELSUBSCRIBE:d.CHANNELSUBSCRIBE;try{s=this._communicate(0,e,t,i)}catch(e){throw e}return s}connect(e){if("sys:*"!=e.toLowerCase())try{this._validateChanelName(e,1)}catch(e){throw e}if(e.toLowerCase().startsWith("sys:"))throw new m("E095");if(this._channelname_sid.has(e))throw new m("E094");var t=this.isPrivateChannel(e);let s=void 0;try{s=this._communicate(1,e,t,d.CHANNELCONNECT)}catch(e){throw e}return s}unsubscribe(e){if(!this._channelname_sid.has(e))throw new m("E030");var t=this._channelname_sid.get(e),s=this._channelsid_registry.get(t);let i=!1;if("s"!=s.type)throw new m("E096");if(s.status==A.UNSUBSCRIBE_INITIATED)throw new m("E097");if(s.status!=A.SUBSCRIPTION_ACCEPTED&&s.status!=A.SUBSCRIPTION_INITIATED&&s.status!=A.SUBSCRIPTION_PENDING&&s.status!=A.SUBSCRIPTION_ERROR&&s.status!=A.UNSUBSCRIBE_ERROR||(i=o(this._dbcore,w.UNSUBSCRIBE_DISCONNECT_FROM_CHANNEL,e,t,void 0)),!i)throw new m("E098");this._channelsid_registry.get(t).status=A.UNSUBSCRIBE_INITIATED}disconnect(e){if(!this._channelname_sid.has(e))throw new m("E099");var t=this._channelname_sid.get(e),s=this._channelsid_registry.get(t);let i=!1;if("c"!=s.type)throw new m("E100");if(s.status==A.DISCONNECT_INITIATED)throw new m("E101");if(s.status!=A.CONNECTION_ACCEPTED&&s.status!=A.CONNECTION_INITIATED&&s.status!=A.CONNECTION_PENDING&&s.status!=A.CONNECTION_ERROR&&s.status!=A.DISCONNECT_ERROR||(i=o(this._dbcore,w.UNSUBSCRIBE_DISCONNECT_FROM_CHANNEL,e,t,void 0)),!i)throw new m("E102");this._channelsid_registry.get(t).status=A.DISCONNECT_INITIATED}_handleSubscribeEvents(s,i,n){const _=async e=>{let t=Object.assign({},this._metadata);t.channelname=n.name,t.eventname=s[e],this._dispatch.emit_channel(s[e],i,t),n.ino.emit_channel(s[e],i,t),(e+=1)<s.length&&_(e)};0<s.length&&_(0)}_updateSubscribeStatus(t,s,i){if(this._channelsid_registry.has(t)){let e=this._channelsid_registry.get(t);switch(e.type){case"s":s===A.SUBSCRIPTION_ACCEPTED?(this._channelsid_registry.get(t).status=s,e.ino._set_isOnline(!0),this._handleSubscribeEvents([a.SUBSCRIBE_SUCCESS,a.ONLINE],"",e)):(this._channelsid_registry.get(t).status=s,e.ino._set_isOnline(!1),this._handleSubscribeEvents([a.SUBSCRIBE_FAIL],i,e),this._channelname_sid.delete(e.name),this._channelsid_registry.delete(t));break;case"c":s===A.CONNECTION_ACCEPTED?(this._channelsid_registry.get(t).status=s,e.ino._set_isOnline(!0),this._handleSubscribeEvents([a.CONNECT_SUCCESS,a.ONLINE],"",e)):(this._channelsid_registry.get(t).status=s,e.ino._set_isOnline(!1),this._handleSubscribeEvents([a.CONNECT_FAIL],i,e),this._channelname_sid.delete(e.name),this._channelsid_registry.delete(t))}}}_updateSubscribeStatusRepeat(t,s,i){if(this._channelsid_registry.has(t)){let e=this._channelsid_registry.get(t);switch(e.type){case"s":s===A.SUBSCRIPTION_ACCEPTED?(this._channelsid_registry.get(t).status=s,e.ino._set_isOnline(!0),this._handleSubscribeEvents([a.RESUBSCRIBE_SUCCESS,a.ONLINE],"",e)):(this._channelsid_registry.get(t).status=s,e.ino._set_isOnline(!1),this._handleSubscribeEvents([a.OFFLINE],i,e));break;case"c":s===A.CONNECTION_ACCEPTED?(this._channelsid_registry.get(t).status=s,e.ino._set_isOnline(!0),this._handleSubscribeEvents([a.RECONNECT_SUCCESS,a.ONLINE],"",e)):(this._channelsid_registry.get(t).status=s,e.ino._set_isOnline(!1),this._handleSubscribeEvents([a.OFFLINE],i,e))}}}_updateChannelsStatusAddChange(e,t,s,i){0==e?this._updateSubscribeStatus(t,s,i):this._updateSubscribeStatusRepeat(t,s,i)}_updateChannelsStatusRemove(t,s,i){if(this._channelsid_registry.has(t)){let e=this._channelsid_registry.get(t);switch(e.type){case"s":s===A.UNSUBSCRIBE_ACCEPTED?(this._channelsid_registry.get(t).status=s,e.ino._set_isOnline(!1),this._handleSubscribeEvents([a.UNSUBSCRIBE_SUCCESS,a.REMOVE],"",e),this._channelname_sid.delete(e.name),this._channelsid_registry.delete(t)):(this._channelsid_registry.get(t).status=A.SUBSCRIPTION_ACCEPTED,e.ino._set_isOnline(!0),this._handleSubscribeEvents([a.UNSUBSCRIBE_FAIL,a.ONLINE],i,e));break;case"c":s===A.DISCONNECT_ACCEPTED?(this._channelsid_registry.get(t).status=s,e.ino._set_isOnline(!1),this._handleSubscribeEvents([a.DISCONNECT_SUCCESS,a.REMOVE],"",e),this._channelname_sid.delete(e.name),this._channelsid_registry.delete(t)):(this._channelsid_registry.get(t).status=A.CONNECTION_ACCEPTED,e.ino._set_isOnline(!0),this._handleSubscribeEvents([a.DISCONNECT_FAIL,a.ONLINE],i,e))}}}_isonline(e){if(!this._channelsid_registry.has(e))return!1;e=this._channelsid_registry.get(e);return e.status==A.CONNECTION_ACCEPTED||e.status==A.SUBSCRIPTION_ACCEPTED}isOnline(e){if(!this._channelname_sid.has(e))throw new m("channel name does not exists");if(!this._dbcore._isSocketConnected())return!1;e=this._channelname_sid.get(e);return this._isonline(e)}list(){let s=[];return this._channelsid_registry.forEach((e,t)=>{t={name:e.name,type:"s"==e.type?"subscribed":"connect",isonline:this._isonline(t)};s.push(t)}),s}_send_OfflineEvents(){this._channelsid_registry.forEach((e,t)=>{let s=Object.assign({},this._metadata);s.channelname=e.ino.getChannelName(),s.eventname=a.OFFLINE,e.ino._set_isOnline(!1),this._handledispatcherEvents(a.OFFLINE,e.name,e.name,s)})}_get_subscribeStatus(e){return this._channelsid_registry.get(e).status}_get_channelType(e){return this._channelsid_registry.has(e)?this._channelsid_registry.get(e).type:""}_get_channelName(e){return this._channelsid_registry.has(e)?this._channelsid_registry.get(e).name:void 0}getConnectStatus(e){return this._channelsid_registry.get(e).status}getChannel(e){if(this._channelsid_registry.has(e))return this._channelsid_registry.get(e).ino}getChannelName(e){if(this._channelsid_registry.has(e))return this._channelsid_registry.get(e).name}isSubscribedChannel(e){return!!this._channelsid_registry.has(e)&&("s"==this._channelsid_registry.get(e).type&&this._channelsid_registry.get(e).ino.isSubscribed)}cleanUp_All(){const i=s=>new Promise(e=>{let t=this._channelsid_registry.get(s);"s"==t.type?(t.ino.unbind(),t.ino.unbind_all()):t.ino.unbind(),e()});this._channelname_sid.forEach((e,t)=>{let s=Object.assign({},this._metadata);s.channelname=t,s.eventname="dbridges:channel.removed",this._handledispatcherEvents(a.REMOVE,void 0,t,s),i(e).then(()=>{this._channelname_sid.delete(t),this._channelsid_registry.delete(e)})})}}class I{constructor(e,t,s,i){this._functionName=e,this._returnSubsect=t,this._sid=s,this._dbcore=i,this._isend=!1,this._id=t,this.tracker=!1}get id(){return this._id}next(e){if(this._isend)throw new m("E105");if(!l(this._dbcore,w.CF_CALL_RESPONSE,null,this._returnSubsect,null,this._sid,e,this._isend,this.tracker))throw new m("E068")}end(e){if(this._isend)throw new m("E105");if(this._isend=!0,!l(this._dbcore,w.CF_CALL_RESPONSE,null,this._returnSubsect,null,this._sid,e,this._isend,this.tracker))throw new m("E068")}exception(e,t){t=JSON.stringify({c:e,m:t});if(this._isend)throw new m("E105");if(this._isend=!0,!l(this._dbcore,w.CF_CALL_RESPONSE,null,this._returnSubsect,"EXP",this._sid,t,this._isend,this.tracker))throw new m("E068")}}class g{constructor(e){this._dispatch=new c,this._dbcore=e,this.enable=!1,this.functions=void 0,this._functionNames=["cf.response.tracker","cf.callee.queue.exceeded"]}_verify_function(){let e=!1;if(this.enable){if(!this.functions)throw new m("E009");if("function"!=typeof this.functions)throw new m("E010");e=!0}else e=!0;return e}regfn(e,t){if(!e)throw new m("E110");if(!t)throw new m("E111");if("string"!=typeof e)throw new m("E110");if("function"!=typeof t)throw new m("E111");if(this._functionNames.includes(e))throw new m("E110");this._dispatch.bind(e,t)}unregfn(e,t){this._functionNames.includes(e)||this._dispatch.unbind(e,t)}bind(e,t){if(!e)throw new m("E066");if(!t)throw new m("E067");if("string"!=typeof e)throw new m("E066");if("function"!=typeof t)throw new m("E067");if(!this._functionNames.includes(e))throw new m("E066");this._dispatch.bind(e,t)}unbind(e,t){this._functionNames.includes(e)&&this._dispatch.unbind(e,t)}_handle_dispatcher(e,t,s,i){s=new I(e,t,s,this._dbcore);this._dispatch.emit_clientfunction(e,i,s)}_handle_tracker_dispatcher(e,t){this._dispatch.emit_clientfunction("cf.response.tracker",e,t)}_handle_exceed_dispatcher(){let e=new m("E070");e.updatecode("CALLEE_QUEUE_EXCEEDED"),this._dispatch.emit_clientfunction("cf.callee.queue.exceeded",e,null)}resetqueue(){if(!l(this._dbcore,w.CF_CALLEE_QUEUE_EXCEEDED,null,null,null,null,null,null,null))throw new m("E068")}}const L=Object.freeze({REGISTRATION_INITIATED:"registration_initiated",REGISTRATION_PENDING:"registration_pending",REGISTRATION_ACCEPTED:"registration_accepted",REGISTRATION_ERROR:"registration_error",RPC_CONNECTION_INITIATED:"rpc_connection_initiated",RPC_CONNECTION_PENDING:"rpc_connection_pending",RPC_CONNECTION_ACCEPTED:"rpc_connection_accepted",RPC_CONNECTION_ERROR:"rpc_connection_error",UNREGISTRATION_INITIATED:"unregister_initiated",UNREGISTRATION_ACCEPTED:"unregister_accepted",UNREGISTRATION_ERROR:"unregister_error",RPC_DISCONNECT_INITIATED:"rpc_disconnect_initiated",RPC_DISCONNECT_ACCEPTED:"rpc_disconnect_accepted",RPC_DISCONNECT_ERROR:"rpc_disconnect_error"});class T{constructor(e,t,s,i){this._functionName=e,this._returnSubsect=t,this._sid=s,this._dbcore=i,this._isend=!1,this._id=t,this.tracker=!1}get id(){return this._id}next(e){if(this._isend)throw new m("E106");if(!l(this._dbcore,w.RPC_CALL_RESPONSE,null,this._returnSubsect,null,this._sid,e,this._isend,this.tracker))throw new m("E079")}end(e){if(this._isend)throw new m("E106");if(this._isend=!0,!l(this._dbcore,w.RPC_CALL_RESPONSE,null,this._returnSubsect,null,this._sid,e,this._isend,this.tracker))throw new m("E079")}exception(e,t){t=JSON.stringify({c:e,m:t});if(this._isend)throw new m("E106");if(this._isend=!0,!l(this._dbcore,w.RPC_CALL_RESPONSE,null,this._returnSubsect,"EXP",this._sid,t,this._isend,this.tracker))throw new m("E079")}}class R{constructor(e,t,s,i="rpc"){this._dispatch=new c,this._dbcore=t,this._rpccore=s,this.enable=!1,this.functions=void 0,this._sid_functionname=new Map,this._serverName=e,this._isOnline=!1,this._callerTYPE=i}getServerName(){return this._serverName}isOnline(){return this._isOnline}_set_isOnline(e){this._isOnline=e}bind(e,t){if(!e)throw new m("E076");if(!t)throw new m("E077");if("string"!=typeof e)throw new m("E076");if("function"!=typeof t)throw new m("E077");this._dispatch.bind(e,t)}unbind(e,t){this._dispatch.unbind(e,t)}_handle_dispatcher(e,t,s,i){s=new T(e,t,s,this._dbcore);this._dispatch.emit_clientfunction(e,i,s)}_handle_callResponse(e,t,s,i){this._sid_functionname.has(e)&&(this._sid_functionname.get(e),this._dispatch.emit_clientfunction(e,t,s,i))}_handle_tracker_dispatcher(e,t){this._dispatch.emit_clientfunction("rpc.response.tracker",e,t)}_handle_exceed_dispatcher(){let e=new m("E054");e.updatecode("CALLEE_QUEUE_EXCEEDED"),this._dispatch.emit_clientfunction("rpc.callee.queue.exceeded",e,null)}async _call_internal(t,s,i,c,a){return new Promise(async(_,r)=>{let e=void 0;e="rpc"==this._callerTYPE?l(this._dbcore,w.CALL_RPC_FUNCTION,t,s,null,c,i):l(this._dbcore,w.CALL_CHANNEL_RPC_FUNCTION,t,s,null,c,i),e||("rpc"==this._callerTYPE?r(new m("E079")):r(new m("E033"))),this.bind(c,(e,t,s)=>{let i=void 0;var n;t?(null!=s?("EXP"===s.toUpperCase()?(n=JSON.parse(e),i="rpc"==this._callerTYPE?new m("E055"):new m("E041"),i.updatecode(n.c,n.m)):(i="rpc"==this._callerTYPE?new m("E054"):new m("E040"),i.updatecode(s.toUpperCase(),"")),r(i)):_(e),this.unbind(c),this._sid_functionname.delete(c)):a&&a(e)})})}_GetUniqueSid(e){let t=e+E();return this._sid_functionname.has(t)&&(t=(""+Math.random()).substring(2,8)),t}call(e,t,s,i){let n="";var _=!0,r=0,c=!1;for(n=E();this._sid_functionname.has(n)?(n=this._GetUniqueSid(n),r++):(this._sid_functionname.set(n,e),c=!0),r<3&&!c;);if(c||(n=this._GetUniqueSid(n),this._sid_functionname.has(n)?_=!1:this._sid_functionname.set(n,e)),!_)throw"rpc"==this._callerTYPE?new m("E108"):new m("E109");this._rpccore.store_object(n,this);let a=void 0;return Promise.race([this._call_internal(this._serverName,e,t,n,i),new Promise((e,t)=>{a=setTimeout(()=>{this.unbind(n),this._sid_functionname.delete(n),"rpc"==this._callerTYPE?t(new m("E080")):t(new m("E042")),l(this._dbcore,w.RPC_CALL_TIMEOUT,null,n,null,null,null,null,null),clearTimeout(a)},s)})]).then(e=>(a&&clearTimeout(a),this._rpccore.delete_object(n),e)).catch(e=>{throw a&&clearTimeout(a),e})}emit(e,t,s){this._dispatch.emit_channel(e,t,s)}}class p{constructor(e,t,s){this._dbrpc=s,this._serverName=e,this._sid=t,this._dbrpc=s}end(e){this._dbrpc._send_to_dbr(this._serverName,this._sid,e)}exception(e){this._dbrpc._send_to_dbr(this._serverName,this._sid,{statuscode:9,error_message:e,accesskey:null})}}class O{constructor(e){this._dbcore=e,this.cf=new g(this._dbcore),this._serverName_sid=new Map,this._serverSid_registry=new Map,this._dispatch=new c,this._callersid_object=new Map,this._server_type=["pvt","prs","sys"]}isEmptyOrSpaces(e){return null===e||/^ *$/.test(e)}_validateServerName(e,t=0){if(this.isEmptyOrSpaces(e)&&1==t)throw new m("E048");if(64<e.length&&1==t)throw new m("E051");if(!/^[a-zA-Z0-9.:_-]*$/.test(e)&&1==t)throw new m("E052");if(e.includes(":")){e=e.toLowerCase().split(":");if(!this._server_type.includes(e[0])&&1==t)throw new m("E052")}}_get_rpcStatus(e){return this._serverSid_registry.get(e).status}bind(e,t){this._dispatch.bind(e,t)}unbind(e,t){this._dispatch.unbind(e,t)}bind_all(e){this._dispatch.bind_all(e)}unbind_all(e){this._dispatch.unbind_all(e)}_ReSubscribeAll(){const n=async(e,t,s)=>{if(!o(this._dbcore,w.CONNECT_TO_RPC_SERVER,e,t,s))throw new m("E053")},s=async e=>{var t,s=this._serverSid_registry.get(e),i=this.isPrivateChannel(s.name);if(s.status===L.RPC_CONNECTION_ACCEPTED)try{i?(t=new p(s.name,e,this),this._dbcore._accesstoken_dispatcher(s.name,d.RPCCONNECT,t)):n(s.name,e,void 0)}catch(e){return void this._handleRegisterEvents([a.RPC_CONNECT_FAIL],e,s)}};this._serverName_sid.forEach((e,t)=>{e.forEach((e,t)=>{s(t)})})}_handledispatcherEvent(i,n){this._dispatch.emit(i,n);let e=this._serverName_sid.get(n);e.forEach((e,t)=>{let s=this._serverSid_registry.get(t);s&&s.ino.emit(i,n)})}_handleRegisterEvents(s,i,n){const _=async e=>{var t={servername:n.ino.getServerName(),eventname:s[e]};this._dispatch.emit_channel(s[e],i,t),n.ino.emit(s[e],i,t),(e+=1)<s.length&&_(e)};0<s.length&&_(0)}_handleRegisterEventsOld(t,s,i){const n=async e=>{i.ino.emit(t[e],s,i.ino.getServerName()),this._handledispatcherEvent(t[e],s,i.ino.getServerName()),(e+=1)<t.length&&n(e)};0<t.length&&n(0)}_updateRegistrationStatus(t,s,i){if(this._serverSid_registry.has(t)){let e=this._serverSid_registry.get(t);switch(e.type){case"r":s===L.REGISTRATION_ACCEPTED?(this._serverSid_registry.get(t).status=s,e.ino._set_isOnline(!0),this._handleRegisterEvents([a.REGISTRATION_SUCCESS,a.SERVER_ONLINE],"",e)):(this._serverSid_registry.get(t).status=s,e.ino._set_isOnline(!1),this._handleRegisterEvents([a.REGISTRATION_FAIL],i,e),this._serverName_sid.get(e.name).delete(t),this._serverSid_registry.delete(t));break;case"c":s===L.RPC_CONNECTION_ACCEPTED?(this._serverSid_registry.get(t).status=s,e.ino._set_isOnline(!0),this._handleRegisterEvents([a.RPC_CONNECT_SUCCESS,a.SERVER_ONLINE],"",e)):(this._serverSid_registry.get(t).status=s,e.ino._set_isOnline(!1),this._handleRegisterEvents([a.RPC_CONNECT_FAIL],i,e),this._serverName_sid.get(e.name).delete(t),this._serverSid_registry.delete(t))}}}_updateRegistrationStatusRepeat(t,s,i){if(this._serverSid_registry.has(t)){let e=this._serverSid_registry.get(t);switch(e.type){case"r":s===L.REGISTRATION_ACCEPTED?(this._serverSid_registry.get(t).status=s,e.ino._set_isOnline(!0),this._handleRegisterEvents([a.SERVER_ONLINE],"",e)):(this._serverSid_registry.get(t).status=s,e.ino._set_isOnline(!1),this._handleRegisterEvents([a.SERVER_OFFLINE],i,e));break;case"c":s===L.RPC_CONNECTION_ACCEPTED?(this._serverSid_registry.get(t).status=s,e.ino._set_isOnline(!0),this._handleRegisterEvents([a.SERVER_ONLINE],"",e)):(this._serverSid_registry.get(t).status=s,e.ino._set_isOnline(!1),this._handleRegisterEvents([a.SERVER_OFFLINE],i,e))}}}_updateRegistrationStatusAddChange(e,t,s,i){0==e?this._updateRegistrationStatus(t,s,i):this._updateRegistrationStatusRepeat(t,s,i)}isPrivateChannel(e){let t=!1;return e.includes(":")&&(e=e.toLowerCase().split(":"),t=!!this._server_type.includes(e[0])),t}_communicate(e,t,s){var i=E();if(t){var n=new p(e,i,this);this._dbcore._accesstoken_dispatcher(e,s,n)}else if(!o(this._dbcore,w.CONNECT_TO_RPC_SERVER,e,i,null))throw new m("E053");var n=new R(e,this._dbcore,this),_={name:e,type:"c",status:L.RPC_CONNECTION_INITIATED,ino:n};return this._serverName_sid.has(e)||this._serverName_sid.set(e,new Map),this._serverName_sid.get(e).set(i,null),this._serverSid_registry.set(i,_),n}_verify_acccess_response(e){let t="";return"statuscode"in e?"number"!=typeof e.statuscode?{result:!(t="the return object structure is blank, statuscode vaule must be numeric"),msg:t,token:""}:0!=e.statuscode?(t="error_message"in e?e.error_message:"access_token function return statuscode: "+e.statuscode+" error_message tag missing",{result:!1,msg:t,token:""}):"accesskey"in e?e.accesskey?{result:!0,msg:"",token:e.accesskey}:(t="access_token function return statuscode: "+e.statuscode+" accesskey is blank",{result:!1,msg:t,token:""}):(t="access_token function return statuscode: "+e.statuscode+" accesskey tag missing",{result:!1,msg:t,token:""}):{result:!(t="the return object structure is blank, does not contain statuscode key"),msg:t,token:""}}_failure_dispatcher(e,t){let s=void 0;const i=this._serverSid_registry.get(e);i.ino._set_isOnline(!1),s=new m("E104"),s.updatecode("",t),this._handleRegisterEvents([a.RPC_CONNECT_FAIL],s,i),this._serverName_sid.get(i.name).delete(e),this._serverSid_registry.delete(e)}_send_to_dbr(e,t,s){var i=this._verify_acccess_response(s);i.result?(s=i.token,o(this._dbcore,w.CONNECT_TO_RPC_SERVER,e,t,s)||this._failure_dispatcher(t,"library is not connected with the dbridges network")):this._failure_dispatcher(t,i.msg)}connect(e){try{this._validateServerName(e,1)}catch(e){throw e}var t=this.isPrivateChannel(e);let s=void 0;try{s=this._communicate(e,t,d.RPCCONNECT)}catch(e){throw e}return s}ChannelCall(e){if(this._serverName_sid.has(e)){var t=[...this._serverName_sid.get(e).keys()][0];return this._serverSid_registry.get(t).ino}var s=E(),t=new R(e,this._dbcore,this,"ch");this._serverName_sid.set(e,new Map),this._serverName_sid.get(e).set(s,null);e={name:e,type:"x",status:L.RPC_CONNECTION_INITIATED,ino:t,count:1};return this._serverSid_registry.set(s,e),t}store_object(e,t){this._callersid_object.set(e,t)}delete_object(e){this._callersid_object.delete(e)}get_object(e){if(this._callersid_object.has(e))return this._callersid_object.get(e)}_send_OfflineEvents(){this._serverName_sid.forEach((e,t)=>{e.forEach((e,t)=>{let s=this._serverSid_registry.get(t);s.ino._set_isOnline(!1),this._handleRegisterEvents([a.SERVER_OFFLINE],"",s)})})}cleanUp_All(){const s=s=>new Promise(e=>{let t=this._serverSid_registry.get(s);t.ino.unbind(),e()});this._serverName_sid.forEach((e,t)=>{e.forEach((e,t)=>{s(t).then(()=>{this._serverSid_registry.delete(t)})}),this._serverName_sid.delete(t)})}}return e.dBridges=class{constructor(){t(this,"_getNextDelay",()=>{let e=0;return 0<this._retryCount&&(e=this.minReconnectionDelay*Math.pow(this.reconnectionDelayGrowFactor,this._retryCount-1),e=e>this.maxReconnectionDelay?this.maxReconnectionDelay:e,e=e<this.minReconnectionDelay?this.minReconnectionDelay:e),e}),t(this,"_reconnect",async()=>this._retryCount>=this.maxReconnectionRetries?(this.connectionstate._handledispatcher(f.RECONNECT_FAILED,new m("E060")),this._ClientSocket&&this._ClientSocket.removeAllListeners(),this.channel.cleanUp_All(),this.rpc.cleanUp_All(),this._lifeCycle=0,this._retryCount=0,this.connectionstate.set_newLifeCycle(!0),void this.connectionstate._handledispatcher(f.DISCONNECTED)):(this._retryCount++,void this._wait().then(()=>{this.connectionstate.reconnect_attempt=this._retryCount,this.connectionstate._handledispatcher(f.RECONNECTING,{}),this.connect()}))),t(this,"connect",async()=>{if(0!=this._retryCount||this.connectionstate.get_newLifeCycle()||this.connectionstate.set_newLifeCycle(!0),this.auth_url)if(this.appkey){try{this.cf._verify_function()}catch(e){if(this.connectionstate.get_newLifeCycle())throw e;return void this.shouldRestart(e)}let e=void 0;try{e=await this.GetdBRInfo(this.auth_url,this.appkey)}catch(e){if(this.connectionstate.get_newLifeCycle())throw e;return void this.shouldRestart(e)}var t;e?(t=(e.secured?"https://":"http://")+e.wsip+":"+e.wsport,this._options.query={sessionkey:e.sessionkey,version:"1.1",libtype:"javascript",cf:this.cf.enable},this._options.secure=(0 in this._options,!0),this._options.rejectUnauthorized=(0 in this._options,!1),this._options.retryInterval=(0 in this._options,5),this._options.retryAttempt=(0 in this._options,0),this._options.reconnect=(0 in this._options,!1),this._options.transports=["websocket"],this._options.timeout=this.connectionTimeout<=0?2e4:this.connectionTimeout,0==this._lifeCycle&&this.connectionstate._handledispatcher(f.CONNECTING,{}),this._isServerReconnect=!1,this._disconnect_reason="",this.connectionstate.set_newLifeCycle(!0),this._ClientSocket=io.connect(t,this._options),this._ClientSocket.addEventListener("disconnect",this._IOEventReconnect),this._ClientSocket.addEventListener("db",this._IOMessage),this._ClientSocket.addEventListener("connect",this._IOConnect),this._ClientSocket.addEventListener("connect_timeout",this._IOConnectFailed),this._ClientSocket.addEventListener("connect_error",this._IOError),window.addEventListener("offline",()=>{this._isServerReconnect=!0,this._disconnect_reason="navigator.offline",this._ClientSocket.disconnect()})):this.shouldRestart("E008",[this.auth_url])}else{if(this.connectionstate.get_newLifeCycle())throw new m("E002");this.shouldRestart("E002")}else{if(this.connectionstate.get_newLifeCycle())throw new m("E001");this.shouldRestart("E001")}}),t(this,"GetdBRInfo",(i,n)=>new Promise(async(e,s)=>{try{const t=await fetch(i,{method:"POST",headers:{"Content-Type":"application/json","x-api-key":n,"lib-transport":"sio"},agent:this.httpsAgent,body:"{}"});if(200!=t.status){let e=new m("E006",[t.status,t.statusText]);e.updatecode(t.status,""),s(e)}e(await t.json())}catch(e){let t=new m("E008",[e.code,e.message]);t.updatecode(e.code,""),s(t)}})),t(this,"_IOEventReconnect",e=>{switch(this.channel._send_OfflineEvents(),this.rpc._send_OfflineEvents(),e){case"io server disconnect":this.connectionstate._handledispatcher(f.ERROR,new m("E061")),this._ClientSocket&&this._ClientSocket.removeAllListeners(),this.autoReconnect?this._reconnect():(this.channel.cleanUp_All(),this.rpc.cleanUp_All(),this._lifeCycle=0,this._retryCount=0,this.connectionstate.set_newLifeCycle(!0),this.connectionstate._handledispatcher(f.DISCONNECTED));break;case"io client disconnect":if(this._isServerReconnect){if("navigator.offline"==this._disconnect_reason){let e=new m("E063");e.updatecode(null,"BROWSER_NAVIGATOR_OFFLINE"),this.connectionstate._handledispatcher(f.CONNECTION_BREAK,e)}else this.connectionstate._handledispatcher(f.CONNECTION_BREAK,new m("E062"));this._ClientSocket&&this._ClientSocket.removeAllListeners(),this.autoReconnect?this._reconnect():(this.channel.cleanUp_All(),this.rpc.cleanUp_All(),this._lifeCycle=0,this._retryCount=0,this.connectionstate.set_newLifeCycle(!0),this.connectionstate._handledispatcher(f.DISCONNECTED))}else this._ClientSocket&&this._ClientSocket.removeAllListeners(),this.channel.cleanUp_All(),this.rpc.cleanUp_All(),this._lifeCycle=0,this._retryCount=0,this.connectionstate.set_newLifeCycle(!0),this.connectionstate._handledispatcher(f.DISCONNECTED);break;default:this._uptimeTimeout&&clearTimeout(this._uptimeTimeout),this.connectionstate._handledispatcher(f.CONNECTION_BREAK,new m("E063")),this._ClientSocket&&this._ClientSocket.removeAllListeners(),this.autoReconnect?this._reconnect():(this.channel.cleanUp_All(),this.rpc.cleanUp_All(),this._lifeCycle=0,this._retryCount=0,this.connectionstate.set_newLifeCycle(!0),this.connectionstate._handledispatcher(f.DISCONNECTED))}}),t(this,"_ReplyLatency",(e,t)=>{this._ClientSocket.connected&&this._ClientSocket.emit("db",w.LATENCY,null,null,null,null,null,null,null,null,null,e,null,null,null,!0,t)}),t(this,"_Rttpong",(e,t,s,i,n,_,r,c,a,h,o,l,E,d,C,N)=>{this._ClientSocket.connected&&this._ClientSocket.emit("db",e,t,s,i,n,_,r,c,a,h,o,l,E,d,C,N)}),t(this,"_mBufferToString",e=>{if(e){const t=new TextDecoder;return t.decode(e)}return""}),t(this,"_IOMessage",(e,s,i,n,_,t,r,c,a,h,o,l,E,d,C,N)=>{let u=void 0,S=void 0;var I=(new Date).getTime()-(h?Number(h):0);let g=void 0,T=void 0,R=void 0,p=void 0;switch(e){case w.SYSTEM_MSG:switch(s){case"connection:success":this._sessionid=this._mBufferToString(_),this.connectionstate.get_newLifeCycle()&&this.cf.enable&&this.cf.functions(),this.connectionstate.set_newLifeCycle(!1),this._uptimeTimeout=setTimeout(()=>this._acceptOpen(),this.minUptime<0?5e3:this.minUptime),this.rpc._ReSubscribeAll(),this.channel._ReSubscribeAll(),h&&this._Rttpong(e,"rttpong",i,n,_,t,r,c,a,h,I,l,E,d,C,N);break;case"rttping":h&&(this.connectionstate._rttms=I,this._Rttpong(e,"rttpong",i,n,_,t,r,c,a,h,I,l,E,d,C,N));break;case"rttpong":if(h){const b=new Date;var O=b.getTime()-Number(h);this.connectionstate._rttms=I,this.connectionstate._handledispatcher(f.RTTPONG,O)}break;case"reconnect":this._isServerReconnect=!0,this._ClientSocket.disconnect();break;default:g=new m("E082"),g.updatecode(s,this._mBufferToString(_)),this.connectionstate._handledispatcher(f.ERROR,g)}break;case w.SUBSCRIBE_TO_CHANNEL:if("success"===s)switch(this.channel._get_subscribeStatus(n)){case A.SUBSCRIPTION_INITIATED:this.channel._updateChannelsStatusAddChange(0,n,A.SUBSCRIPTION_ACCEPTED,"");break;case A.SUBSCRIPTION_ACCEPTED:case A.SUBSCRIPTION_PENDING:this.channel._updateChannelsStatusAddChange(1,n,A.SUBSCRIPTION_ACCEPTED,"")}else switch(g=new m("E064"),g.updatecode(s.toUpperCase(),this._mBufferToString(_)),this.channel._get_subscribeStatus(n)){case A.SUBSCRIPTION_INITIATED:this.channel._updateChannelsStatusAddChange(0,n,A.SUBSCRIPTION_ERRORs,g);break;case A.SUBSCRIPTION_ACCEPTED:case A.SUBSCRIPTION_PENDING:this.channel._updateChannelsStatusAddChange(1,n,A.SUBSCRIPTION_PENDING,g)}break;case w.CONNECT_TO_CHANNEL:if("success"===s)switch(this.channel._get_subscribeStatus(n)){case A.CONNECTION_INITIATED:this.channel._updateChannelsStatusAddChange(0,n,A.CONNECTION_ACCEPTED,"");break;case A.CONNECTION_ACCEPTED:case A.CONNECTION_PENDING:this.channel._updateChannelsStatusAddChange(1,n,A.CONNECTION_ACCEPTED,"")}else switch(g=new m("E084"),g.updatecode(s.toUpperCase(),this._mBufferToString(_)),this.channel._get_subscribeStatus(n)){case A.CONNECTION_INITIATED:this.channel._updateChannelsStatusAddChange(0,n,A.CONNECTION_ERROR,g);break;case A.CONNECTION_ACCEPTED:case A.CONNECTION_PENDING:this.channel._updateChannelsStatusAddChange(1,n,A.CONNECTION_PENDING,g)}break;case w.UNSUBSCRIBE_DISCONNECT_FROM_CHANNEL:if("success"===s)switch(this.channel._get_channelType(n)){case"s":this.channel._updateChannelsStatusRemove(n,A.UNSUBSCRIBE_ACCEPTED,"");break;case"c":this.channel._updateChannelsStatusRemove(n,A.DISCONNECT_ACCEPTED,"")}else switch(this.channel._get_channelType(n)){case"s":g=new m("E065"),g.updatecode(s.toUpperCase(),this._mBufferToString(_)),this.channel._updateChannelsStatusRemove(n,A.UNSUBSCRIBE_ERROR,g);break;case"c":g=new m("E088"),g.updatecode(s.toUpperCase(),this._mBufferToString(_)),this.channel._updateChannelsStatusRemove(n,A.DISCONNECT_ERROR,"")}break;case w.PUBLISH_TO_CHANNEL:u=this.channel._get_channelName(n),S=Object.assign({},this._metadata),S.eventname=s,S.sourcesysid=E,S.sessionid=d,S.sqnum=N,h&&(S.intime=h),u.toLowerCase().startsWith("sys:*")?S.channelname=t:S.channelname=u,p=void 0;try{p=_?this._mBufferToString(_):""}catch(e){p=""}this.channel._handledispatcherEvents(s,p,u,S);break;case w.PARTICIPANT_JOIN:u=this.channel._get_channelName(n),S=Object.assign({},this._metadata),S.eventname="dbridges:participant.joined",S.sourcesysid=E,S.sessionid=d,S.sqnum=N,S.channelname=u,h&&(S.intime=h),u.toLowerCase().startsWith("sys:")||u.toLowerCase().startsWith("prs:")?(R=this._convertToObject(d,E,t),S.sourcesysid=R.sysyid,S.sessionid=R.s,u.toLowerCase().startsWith("sys::*"),this.channel._handledispatcherEvents("dbridges:participant.joined",R.i,u,S)):this.channel._handledispatcherEvents("dbridges:participant.joined",{sourcesysid:E},u,S);break;case w.PARTICIPANT_LEFT:u=this.channel._get_channelName(n),S=Object.assign({},this._metadata),S.eventname="dbridges:participant.left",S.sourcesysid=E,S.sessionid=d,S.sqnum=N,S.channelname=u,h&&(S.intime=h),u.toLowerCase().startsWith("sys:")||u.toLowerCase().startsWith("prs:")?(R=this._convertToObject(d,E,t),S.sourcesysid=R.sysyid,S.sessionid=R.s,u.toLowerCase().startsWith("sys:*"),this.channel._handledispatcherEvents("dbridges:participant.left",R.i,u,S)):this.channel._handledispatcherEvents("dbridges:participant.left",{sourcesysid:E},u,S);break;case w.CF_CALL_RECEIVED:if(0==n){let t=void 0;try{t=_?this._mBufferToString(_):""}catch(e){t=""}this.cf._handle_dispatcher(s,i,n,t)}break;case w.CF_RESPONSE_TRACKER:this.cf._handle_tracker_dispatcher(s,i);break;case w.CF_CALLEE_QUEUE_EXCEEDED:this.cf._handle_exceed_dispatcher();break;case w.CONNECT_TO_RPC_SERVER:if("success"===s)switch(this.rpc._get_rpcStatus(n)){case L.RPC_CONNECTION_INITIATED:this.rpc._updateRegistrationStatusAddChange(0,n,L.RPC_CONNECTION_ACCEPTED,"");break;case L.RPC_CONNECTION_ACCEPTED:case L.RPC_CONNECTION_PENDING:this.rpc._updateRegistrationStatusAddChange(1,n,L.RPC_CONNECTION_ACCEPTED,"")}else switch(g=new m("E082"),g.updatecode(s.toUpperCase(),""),this.rpc._get_rpcStatus(n)){case L.RPC_CONNECTION_INITIATED:this.rpc._updateRegistrationStatusAddChange(0,n,L.RPC_CONNECTION_ERROR,g);break;case L.RPC_CONNECTION_ACCEPTED:case L.RPC_CONNECTION_PENDING:this.rpc._updateRegistrationStatusAddChange(1,n,L.RPC_CONNECTION_PENDING,g)}break;case w.RPC_CALL_RESPONSE:p="";try{p=_?this._mBufferToString(_):""}catch(e){p=""}T=this.rpc.get_object(n),T._handle_callResponse(n,p,r,i);break;case w.RPC_CALL_RECEIVED:if(0==n){p=void 0;try{p=_?this._mBufferToString(_):""}catch(e){p=""}let e=this.rpc.get_rpcServerObject(n);e._handle_dispatcher(s,i,n,p)}break;case w.RPC_RESPONSE_TRACKER:T=this.rpc.get_object(n),T._handle_tracker_dispatcher(s,i);break;case w.RPC_CALLEE_QUEUE_EXCEEDED:T=this.rpc.get_object(n),T._handle_exceed_dispatcher()}}),t(this,"_convertToObject",(e,t,s=void 0)=>{let i="",n="",_="",r="",c="";return t&&(1<(t=t.split("#")).length&&(i=t[0]),2<t.length&&(n=t[1]),3<t.length&&(_=t[2]),4<t.length&&(r=t[3]),5<=t.length&&(c=t[4])),{i:s?{sessionid:i,libtype:n,sourceipv4:_,sourceipv6:r,sysinfo:e,channelname:s,sourcesysid:c}:{sessionid:i,libtype:n,sourceipv4:_,sourceipv6:r,sysinfo:e,sourcesysid:c},s:i,sysyid:c}}),t(this,"_IOConnect",()=>{}),t(this,"_IOConnectFailed",e=>{this.connectionstate._handledispatcher(f.ERROR,e),this._ClientSocket&&this._ClientSocket.removeAllListeners(),this.autoReconnect&&this._reconnect()}),t(this,"_IOError",e=>{this.connectionstate._handledispatcher(f.ERROR,e),this._ClientSocket&&this._ClientSocket.removeAllListeners(),this.autoReconnect&&this._reconnect()}),t(this,"send",e=>{let t=!1;return this._ClientSocket.connected&&(this._ClientSocket.emit(e.eventname,e.dbmsgtype,e.subject,e.rsub,e.sid,e.payload,e.fenceid,e.rspend,e.rtrack,e.rtrackstat,e.t1,e.latency,e.globmatch,e.sourceid,e.sourceip,e.replylatency,e.oqueumonitorid),t=!0),t}),this.appkey=void 0,this.auth_url=void 0,this._count=0,this._metadata={channelname:void 0,eventname:void 0,sourcesysid:void 0,sqnum:void 0,sessionid:void 0,intime:void 0},this._ClientSocket=void 0,this._sessionid=void 0,this.connectionstate=new s(this),this.channel=new S(this),this._options={},this.maxReconnectionRetries=10,this.maxReconnectionDelay=12e4,this.minReconnectionDelay=1e3+4e3*Math.random(),this.reconnectionDelayGrowFactor=1.3,this.minUptime=500,this.connectionTimeout=1e4,this.autoReconnect=!0,this._uptimeTimeout=void 0,this._retryCount=0,this._lifeCycle=0,this._isServerReconnect=!1,this._disconnect_reason="",this._dispatch=new c,this.cf=new g(this),this.rpc=new O(this)}get sessionid(){return this._sessionid}access_token(e){if(!e)throw new m("E004");if("function"!=typeof e)throw new m("E004");if(this._dispatch.isExists("dbridges:access_token"))throw new m("E004");this._dispatch.bind("dbridges:access_token",e)}_accesstoken_dispatcher(e,t,s){if(!this._dispatch.isExists("dbridges:access_token"))throw new m("E004");this._dispatch.emit2("dbridges:access_token",e,this._sessionid,t,s)}_acceptOpen(){this._retryCount=0,this.connectionstate.reconnect_attempt=this._retryCount,this._ClientSocket.connected&&(0==this._lifeCycle?(this.connectionstate._handledispatcher(f.CONNECTED),this._lifeCycle++):this.connectionstate._handledispatcher(f.RECONNECTED))}_wait(){return new Promise(e=>{setTimeout(e,this._getNextDelay())})}shouldRestart(e){this.autoReconnect&&(this.connectionstate.get_newLifeCycle()?"string"==typeof e?this.connectionstate._handledispatcher(f.ERROR,new m(e)):this.connectionstate._handledispatcher(f.ERROR,e):("string"==typeof e?this.connectionstate._handledispatcher(f.RECONNECT_ERROR,new m(e)):this.connectionstate._handledispatcher(f.RECONNECT_ERROR,e),this._reconnect()))}disconnect(){this._ClientSocket.disconnect()}_isSocketConnected(){return!!this._ClientSocket&&this._ClientSocket.connected}},Object.defineProperty(e,"__esModule",{value:!0}),e}({});
//# sourceMappingURL=databridges.sio.lib.min.js.map
